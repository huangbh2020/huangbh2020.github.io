[{"title":"关于我为什么要建一个变量命名网站","url":"/2025/05/20/%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%81%9A%E8%BF%99%E4%B8%AA%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E7%BD%91%E7%AB%99/","content":"为什么我要建一个变量命名网站？在日常开发过程中，变量命名一直是困扰无数程序员的难题。一个好的变量名不仅能提升代码的可读性，还能让团队协作更加顺畅。然而，现实中我们经常会遇到“不会命名”的尴尬时刻。为了解决这个问题，我尝试过市面上各种变量命名工具，但总觉得不尽如人意。\n有些工具生成的变量名不够语义化，难以直接应用到实际项目中；有些则只是简单地将中文直译成英文，缺乏上下文和行业语境的理解。这样的命名方式，往往无法满足我们对高质量代码的追求。\n随着AI技术的飞速发展，尤其是大模型的普及，变量命名这件“小事”其实已经可以用智能化的方式来解决。现在大模型的能力越来越强，调用成本也不高，为什么不自己做一个更懂程序员、更贴合实际需求的变量命名网站呢？\n更巧的是，最近Spring AI正式发布了1.0.0版本，这为Java开发者带来了新的希望。作为一名Java Boy，我当然不能错过这个机会。于是，我决定动手开发一个基于AI、专为程序员量身打造的变量命名网站。\n这个网站的目标很简单：  \n\n提供智能、语义化的变量命名建议  \n支持多种编程语言和场景  \n结合大模型的理解能力，生成更贴合实际业务的命名  \n让每一位程序员都能轻松写出高质量、易维护的代码\n\n技术选型：为什么是 Spring AI？有了想法，下一步就是动手实现。作为一名忠实的 Java Boy，技术栈的选择几乎是印在DNA里的：Spring Boot 必是基石。而这次，有了 Spring AI 的加持，整个开发过程变得前所未有的顺滑。\n选择 Spring AI，主要有以下几个原因：\n\n无缝的生态集成：Spring AI 就像是 Spring 全家桶里的一块新拼图，它与我们熟悉的 Spring Boot、Spring MVC 等框架完美融合。没有陡峭的学习曲线，不需要引入复杂的第三方库，只需要几个简单的注解和配置，就能让我的应用拥有强大的AI能力。\n优雅的抽象与可移植性：Spring AI 提供了统一的 ChatClient 和 EmbeddingClient 接口。这意味着，我的后端服务可以轻松地在不同的AI模型提供商之间切换，比如 OpenAI、Azure OpenAI、Ollama，以及通过社区支持的智普AI等。这种“一次编码，随处运行”的理念，让我的小项目未来充满了无限可能，不用担心被某个大模型厂商“绑架”。\n极简的开发体验：在没有 Spring AI 之前，要调用一个大模型，我需要自己处理 HTTP 请求、JSON 解析、API 密钥管理等一堆繁琐的杂事。而现在，我只需要注入一个 ChatClient Bean，然后调用一个方法，就能像调用本地 Service 一样简单地与AI对话。它让我能更专注于核心业务逻辑——如何通过精妙的提示词（Prompt）工程，让AI生成最符合我们开发习惯的变量名。\n\n从想法到现实：核心功能与亮点在 Spring AI 的助力下，我很快就将想法变成了现实。这个变量命名网站，不仅仅是一个“翻译工具”，我更希望它是一个能“理解”你的编程伙伴。它具备以下核心功能：\n\n智能上下文理解：你不再需要只输入“用户列表”这样的简单词汇。你可以尝试输入更完整的业务场景，比如：&lt;br&gt;“根据用户ID列表批量查询已激活的用户信息”&lt;br&gt;AI会理解其中的动词、名词和限定条件，为你生成 activeUsersByIds 或 findActiveUsersByIdList 这样更具描述性的命名。\n\n多种命名风格支持：无论你是前端还是后端，都能找到你的最爱。网站支持小驼峰（camelCase）、大驼峰（PascalCase）、下划线（snake_case）和中划线（kebab-case）等多种主流命名风格一键切换。\n\n主流模型自由切换：考虑到不同AI模型的“性格”各异，我还在网站中加入了模型选择功能。你可以根据自己的喜好，在 DeepSeek 和 智普AI 等不同模型间自由切换，找到那个最懂你的“AI命名搭子”。\n\n代码注释与方法命名：除了变量命名，我还加入了更实用的功能。你可以将整个方法体贴进去，让AI帮你生成完整的方法名和规范的Javadoc注释，真正将你从文档工作中解放出来。\n\n\n未来展望与诚挚邀请这个小小的网站，是我作为一名普通开发者，对提升编程体验的一次探索。它目前可能还不完美，但这是一个开始。\n未来，我计划：\n\n开发配套的 IDEA 插件，让命名和注释功能无缝集成到你的开发环境中。\n引入更多的AI模型，提供更丰富的选择。\n探索“代码块重构”功能，对你已有的代码进行智能命名优化。\n\n这个工具是为我们开发者而生，也希望能由我们共同完善。\n在此，我诚挚地邀请每一位被“命名”困扰过的朋友，来体验一下我的这个小作品：\n点击这里访问：变量命名神器\n\n它完全免费，无需注册。如果你在使用过程中有任何建议或发现了Bug，都非常欢迎你向我反馈。让我们一起，用技术的力量，解决那些开发中的“小麻烦”，把更多的时间和精力，留给创造本身。\n感谢大家！\n","categories":["代码人生"],"tags":["变量命名","程序员工具","代码人生","AI工具"]},{"title":"介绍一款好用的变量命名网站","url":"/2025/05/21/%E4%BB%8B%E7%BB%8D%E4%B8%80%E6%AC%BE%E5%A5%BD%E7%94%A8%E7%9A%84%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E7%BD%91%E7%AB%99/","content":"前言大家好，今天我非常激动地向大家介绍我独立开发的一款网站，主要目的是为了解决程序员在开发过程中遇到的一个普遍痛点：变量命名。\n一个好的变量名不仅能让代码更易读，还能提高协作效率。希望我的这个小工具能帮助到大家。\n访问地址：https://www.icanshock.fun/\n主要功能网站目前主要提供以下几个核心功能：\n1. 变量命名这是最核心的功能。你可以输入变量的中文含义或者功能描述，网站会利用AI模型为你生成符合代码规范和语义的变量名。\n2. 变量批量命名当你需要一次性命名多个变量时，这个功能就派上用场了。你可以在输入框中一次性输入多个中文含义（每行一个），网站会为你批量生成对应的变量名，省去逐个命名的麻烦。\n3. AI模型配置为了保证命名结果的质量和灵活性，网站集成了多个强大的AI语言模型。目前支持：\n\nDeepSeek\n智谱AI (Zhipu AI)\n\n用户可以根据自己的需求和偏好，在设置中自由切换和配置所使用的模型。\n结语开发这个网站的初衷是为了解决我自己在编程时遇到的问题，现在我把它分享出来，希望能帮助到更多有同样困扰的开发者。\n欢迎大家体验和提出宝贵的意见！\n","categories":["代码人生"],"tags":["变量命名","程序员工具","代码人生","AI工具"]},{"title":"从网页到插件：我的变量命名工具进化论","url":"/2025/05/29/%E4%BB%8E%E7%BD%91%E9%A1%B5%E5%88%B0%E6%8F%92%E4%BB%B6-%E6%88%91%E7%9A%84%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E5%B7%A5%E5%85%B7%E8%BF%9B%E5%8C%96%E8%AE%BA/","content":"从网页到插件：一次提效的进化上一篇文章我分享了自己为什么要做一个变量命名网站，在网站上线后，我成了它的忠实用户。在日常工作中，它确实帮我解决了不少命名烦恼，我甚至还特意用它把我之前一些项目的老代码，都重新优化了一遍命名。\n但是，用着用着，我发现了一个很影响“沉浸式编码”的问题，或者说是一个新的需求。\n“复制-粘贴”的低效循环我的典型工作流是这样的：\n\n在 IDEA 里写代码，遇到一个需要命名的变量，用中文注释写下它的含义。\n选中这段中文，Ctrl+C。\n切换到浏览器，找到我的命名网站，Ctrl+V。\n点击生成，然后从网页上 Ctrl+C 复制回满意的变量名。\n再切回 IDEA，Ctrl+V 粘贴到代码里。\n\n整个过程虽然不长，但频繁的“复制-切换-粘贴”打断了连贯的编程思路，效率还是不够高。作为一个追求极致效率的程序员，这怎么能忍？\n于是，一个大胆的想法冒了出来：为什么不直接在 IDEA 里搞定这一切呢？我要做一个插件！\n说干就干，即使我是个“插件小白”“说干就干”是程序员的美德，但问题是——我从没搞过 IDEA 插件开发。\n不过，这都不是事儿。没搞过，就上网查资料呗！官方文档、技术博客、开源项目… 我一头扎进了插件开发的世界。经过了几天昏天黑地的奋斗，踩了无数的坑，终于，第一个能跑起来的版本诞生了！\n那一刻的激动，不亚于当初网站第一次成功调通 AI 接口。\n从0到几十个用户：第一个版本的诞生与回响插件的第一个版本核心功能很简单：在 IDEA 中选中文字，右键或者使用快捷键，直接调用 AI 进行命名，并将结果插入或替换到当前光标位置。\n就这么一个简单的功能，却极大地改善了我的开发体验。\n我把这个插件上架到了 JetBrains Marketplace。让我惊喜的是，没过多久，它就成功吸引了几十位用户下载使用。期间，我也收到了一些热心用户的反馈，有鼓励也有建议。总体问题不大，但这些反馈都非常宝贵，让我有了持续迭代的动力。\n欢迎体验与共建从一个网页到一个 IDEA 插件，这不仅仅是一次技术上的跨越，更是我对提升开发者体验的持续探索。\n如果你也曾被变量命名所困扰，如果你也觉得在浏览器和 IDE 之间来回切换很麻烦，那么，我诚挚地邀请你来体验一下这款插件，插件市场搜索：Easy Naming。\n也欢迎大家向我提出宝贵的意见和建议，让我们一起把它打磨得更好用！\n","categories":["代码人生"],"tags":["IDEA插件","变量命名","AI工具","开发效率","Java"]},{"title":"我的AI插件功能迭代之路：从变量命名到代码注释","url":"/2025/06/18/%E6%88%91%E7%9A%84AI%E6%8F%92%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%BF%AD%E4%BB%A3%E4%B9%8B%E8%B7%AF-%E4%BB%8E%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E5%88%B0%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A/","content":"喜悦之后的短暂迷茫上一篇提到，我的变量命名插件上线后，没过多久就收获了几十个用户的下载。这对我来说是巨大的鼓舞，感觉自己的小作品被大家需要和认可，非常开心。既然这么多人喜欢，我也不能让大家失望，得赶紧加入些新功能！\n但问题来了，要加什么新功能呢？我苦思冥想了好几天，却没什么好点子。于是，插件的更新就这么停滞了下来。\n灵感总在不经意间闪现几天后，就在我日常写代码时，转机出现了。我写完一个颇为复杂的方法，习惯性地想用一款常用的注释插件来生成 Javadoc。然而，生成后的注释效果让我大失所望——基本上就是生硬的机器翻译，可读性很差，根本无法准确描述方法的功能。\n我盯着那段糟糕的注释，突然灵机一动：既然这个注释插件不好用，效果这么差，我为什么不在自己的插件里，用大模型的能力来实现一个智能代码注释功能呢？\n这个想法让我瞬间兴奋起来。这不就是我一直在找的新功能方向吗？\n攻克最难的“一厘米”有了想法，就立刻开干。在做的过程中，我发现最困难的环节，竟然不是如何设计 Prompt 让大模型理解代码并生成高质量的注释，而是一个看起来很简单的工程问题：生成的注释，如何精准地粘贴回代码里对应方法的开头位置？\n这涉及到对 IDEA 插件 API 的深度理解，需要准确地分析代码的抽象语法树（AST），找到方法的起始点，并执行插入操作。经过好几天的研究、尝试和失败，我终于找到了一个稳定可靠的方案，成功实现了这个功能。\n当看到插件能完美地将AI生成的注释，分毫不差地添加到方法定义的上方时，我知道，成了！\n新版本，新起点功能完成后，我马不停蹄地打包、提交审核。经过两天的等待，新版本如约而至。用户的反馈是积极的，经过几天的自然增长，插件的用户数顺利突破了100大关！\n当然，新的问题也随之而来。有用户反馈，插件在 PhpStorm 和 PyCharm 中无法使用。这确实是我初期没有考虑到的兼容性问题。看来，要让更多不同语言的开发者用上它，我后续还有不少工作要做。\n下一步：如何让更多人知道它？现在，我的插件不仅能做变量命名，还能生成高质量的代码注释，功能感觉越来越齐全了。但酒香也怕巷子深，新的瓶颈出现了——推广。\n我实在不知道如何有效地推广自己的个人项目。所以，也想在这里向各位前辈和朋友们请教：\n有没有大神可以教教我，如何推广一款个人开发的插件？\n非常感谢大家的任何建议！\n","categories":["代码人生"],"tags":["IDEA插件","AI开发","代码注释","个人项目","程序员"]},{"title":"我的AI插件推广之路：一个开发者的求助","url":"/2025/06/29/%E6%88%91%E7%9A%84AI%E6%8F%92%E4%BB%B6%E6%8E%A8%E5%B9%BF%E4%B9%8B%E8%B7%AF-%E4%B8%80%E4%B8%AA%E5%BC%80%E5%8F%91%E8%80%85%E7%9A%84%E6%B1%82%E5%8A%A9/","content":"在上一篇文章里，我记录了为我的AI插件添加“智能代码注释”功能的历程。现在，插件的核心功能已经基本完善，能同时解决“变量命名”和“代码注释”两大痛点。我自认为这是一款颇为实用的工具了。\n但是，一个更严峻的挑战摆在了面前：推广。\n再好的东西，如果没有人知道，那它的价值就无法体现。我深知这个道理，但作为一个整天和代码打交道的程序员，推广和运营对我来说，完全是一个陌生的领域。\n我唯一的尝试：内容营销该如何做呢？我完全没有头绪。\n我唯一能想到的，也是我唯一会做的，就是写文章。把我的想法、开发过程、遇到的困难、解决的方案，以及插件的使用技巧，都记录下来，分享出去。\n于是，我开始在各个内容平台上“安利”我的插件：\n\n掘金\nCSDN\n知乎\n甚至，我还去小红书发了笔记\n\n这些文章确实带来了一些流量，帮助我吸引到了一批种子用户。每当看到后台新增的下载量，或者收到用户的积极反馈时，都让我备受鼓舞。\n但说实话，效果只能算“一般般”。文章带来的用户增长是线性的，并没有出现我所期待的“爆发”。\n坚持，以及一个真诚的求助现在，我似乎也没有其他更好的办法了。只能把写文章、发内容这件事，当作一项日常任务，每天坚持去做，希望能通过这种最“笨”的方式，慢慢积累口碑，让更多人看到我的作品。\n写下这篇文章，一方面是记录我作为独立开发者，在“增长”这个阶段遇到的真实困境。\n另一方面，也是更重要的，是想向大家求助。\n各位在互联网世界里摸爬滚打的前辈、朋友们，如果你们有任何关于个人项目、开源工具的推广经验和建议，希望能不吝赐教，指导指导我！\n任何一个点子，对我来说可能都是打开新世界大门的钥匙。感激不尽！\n","categories":["代码人生"],"tags":["程序员","独立开发","项目推广","内容营销","增长"]},{"title":"Hexo博客接入百度统计详细教程","url":"/2025/06/29/Hexo%E5%8D%9A%E5%AE%A2%E6%8E%A5%E5%85%A5%E7%99%BE%E5%BA%A6%E7%BB%9F%E8%AE%A1%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/","content":"前言当我们用心搭建和维护一个博客时，总是希望了解它的访问情况。比如，有多少人访问了我的网站？他们来自哪里？他们对哪些文章最感兴趣？\n要回答这些问题，我们就需要一个网站分析工具。百度统计是中国市场占有率最高的网站分析平台之一，它功能强大且完全免费，是个人博客站长的绝佳选择。\n本文将以 Hexo 博客为例，详细介绍如何接入百度统计，让你对自己的网站了如指掌。\n第一步：注册并获取统计代码在开始之前，你首先需要有一个百度账号，并开通百度统计服务。\n\n访问百度统计官网：https://tongji.baidu.com/\n\n登录&#x2F;注册：使用你的百度账号登录。如果没有账号，请先注册。\n\n新增网站：在管理页面，选择“网站中心” -&gt; “新增网站”，填写你的博客域名和网站首页地址。\n\n\n  \n\n获取跟踪代码：填写完毕后，百度统计会为你生成一段专属的 JavaScript 跟踪代码。这段代码就是连接你的博客和百度统计服务器的桥梁。\n代码通常长这个样子：\nvar _hmt = _hmt || [];(function() &#123;  var hm = document.createElement(&quot;script&quot;);  hm.src = &quot;https://hm.baidu.com/hm.js?xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;; // 这里是你的唯一ID  var s = document.getElementsByTagName(&quot;script&quot;)[0];   s.parentNode.insertBefore(hm, s);&#125;)();\n请务必完整复制你自己的代码，特别是 hm.js? 后面的那串由32个字符组成的 key，这是你网站的唯一标识。\n\n\n第二步：将代码添加到你的博客获取到代码后，我们需要将它插入到博客的每一个页面中。对于 Hexo 博客，通常有两种方法。\n方案一：通过主题配置文件（推荐）现在主流的 Hexo 主题（如 Butterfly, Next 等）都内置了对各种分析工具的支持，你只需要在主题的配置文件中填入你的ID即可。这是最优雅、最推荐的方式，因为它不会在主题更新时被覆盖。\n以你正在使用的 butterfly 主题为例：\n\n打开主题配置文件：找到并打开 themes/butterfly/_config.yml 文件。\n\n查找分析相关配置：在配置文件中搜索 analysis 或者 baidu_analytics 关键字。\n\n填入你的ID：找到 baidu_analytics 字段，将从百度统计获取到的 key (也就是 hm.js? 后面的那32位字符串) 填入。\n# Baidu Analytics# https://tongji.baidu.com/baidu_analytics: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx # 粘贴你的 key 到这里\n\n保存文件即可。主题会自动将完整的JS代码注入到页面的正确位置。\n\n\n方案二：直接修改布局文件（不推荐）如果你的主题没有提供对百度统计的直接支持，或者你想自定义插入位置，可以选择手动修改布局文件。\n\n找到公共布局文件：通常是负责生成页面 &lt;head&gt; 或 &lt;footer&gt; 部分的文件。在 butterfly 主题中，一个合适的位置是 themes/butterfly/layout/includes/footer.pug 的末尾，或者在 themes/butterfly/layout/includes/additional-js.pug 中添加。\n\n插入完整代码：将第一步从百度统计官网复制的完整 JavaScript 代码，粘贴到文件的末尾。\n例如，在 additional-js.pug 中添加：\n//- Baidu Analyticsscript.  var _hmt = _hmt || [];  (function() &#123;    var hm = document.createElement(&quot;script&quot;);    hm.src = &quot;https://hm.baidu.com/hm.js?xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;;    var s = document.getElementsByTagName(&quot;script&quot;)[0];     s.parentNode.insertBefore(hm, s);  &#125;)();\n\n注意：这种方法的缺点是，当你更新主题时，你的修改可能会被覆盖，需要手动恢复。\n\n\n第三步：部署与验证代码添加完成后，需要重新生成并部署你的博客。\nhexo clean &amp;&amp; hexo g &amp;&amp; hexo d\n\n部署成功后，等待大约20分钟左右，回到百度统计的官网，进入“网站中心”，找到你的网站，点击“代码安装检查”。如果看到“代码安装正确”的提示，那就大功告成了！\n\n之后，你就可以在百度统计的报告中，看到你博客的详细访问数据了。\n结语通过以上三个简单的步骤，你的博客就成功接入了百度统计。数据分析是网站运营的重要一环，希望这个工具能帮助你更好地了解你的读者，创作出更受欢迎的内容。快去探索百度统计强大的后台功能吧！\n","categories":["技术教程"],"tags":["Hexo","百度统计","网站分析","SEO","技术教程"]}]